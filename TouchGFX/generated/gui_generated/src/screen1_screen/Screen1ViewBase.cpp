/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen1ViewBase::Screen1ViewBase() :
    frameCountInteraction4Interval(0)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 480, 800);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    box1.setPosition(-2, -5, 480, 800);
    box1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    add(box1);

    boxWithBorder2.setPosition(-13, 117, 498, 236);
    boxWithBorder2.setColor(touchgfx::Color::getColorFromRGB(200, 203, 210));
    boxWithBorder2.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxWithBorder2.setBorderSize(5);
    add(boxWithBorder2);

    boxWithBorder2_1.setPosition(-11, 347, 496, 147);
    boxWithBorder2_1.setColor(touchgfx::Color::getColorFromRGB(249, 220, 191));
    boxWithBorder2_1.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxWithBorder2_1.setBorderSize(5);
    add(boxWithBorder2_1);

    boxWithBorder2_1_1.setPosition(-12, 488, 497, 156);
    boxWithBorder2_1_1.setColor(touchgfx::Color::getColorFromRGB(190, 247, 206));
    boxWithBorder2_1_1.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxWithBorder2_1_1.setBorderSize(5);
    add(boxWithBorder2_1_1);

    boxWithBorder2_1_1_1.setPosition(-9, 638, 494, 66);
    boxWithBorder2_1_1_1.setColor(touchgfx::Color::getColorFromRGB(245, 188, 188));
    boxWithBorder2_1_1_1.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxWithBorder2_1_1_1.setBorderSize(5);
    add(boxWithBorder2_1_1_1);

    total.setPosition(3, 162, 232, 28);
    total.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    total.setLinespacing(0);
    Unicode::snprintf(totalBuffer, TOTAL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5XM3).getText());
    total.setWildcard(totalBuffer);
    total.setTypedText(touchgfx::TypedText(T___SINGLEUSE_60TL));
    add(total);

    session.setPosition(252, 162, 252, 26);
    session.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    session.setLinespacing(0);
    Unicode::snprintf(sessionBuffer, SESSION_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_SBY5).getText());
    session.setWildcard(sessionBuffer);
    session.setTypedText(touchgfx::TypedText(T___SINGLEUSE_GBLF));
    add(session);

    speed.setPosition(252, 322, 252, 25);
    speed.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    speed.setLinespacing(0);
    Unicode::snprintf(speedBuffer, SPEED_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_7C5Q).getText());
    speed.setWildcard(speedBuffer);
    speed.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TWF3));
    add(speed);

    cellTemp.setPosition(252, 382, 252, 25);
    cellTemp.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    cellTemp.setLinespacing(0);
    Unicode::snprintf(cellTempBuffer, CELLTEMP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_QWO4).getText());
    cellTemp.setWildcard(cellTempBuffer);
    cellTemp.setTypedText(touchgfx::TypedText(T___SINGLEUSE_U3RT));
    add(cellTemp);

    cellVolt.setPosition(3, 382, 248, 26);
    cellVolt.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    cellVolt.setLinespacing(0);
    Unicode::snprintf(cellVoltBuffer, CELLVOLT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0XTX).getText());
    cellVolt.setWildcard(cellVoltBuffer);
    cellVolt.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7ZJ));
    add(cellVolt);

    leftTurnText.setPosition(3, 532, 248, 26);
    leftTurnText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    leftTurnText.setLinespacing(0);
    Unicode::snprintf(leftTurnTextBuffer, LEFTTURNTEXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_3I6X).getText());
    leftTurnText.setWildcard(leftTurnTextBuffer);
    leftTurnText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_42A2));
    add(leftTurnText);

    hazardsText.setPosition(166, 532, 248, 26);
    hazardsText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    hazardsText.setLinespacing(0);
    Unicode::snprintf(hazardsTextBuffer, HAZARDSTEXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_PRCN).getText());
    hazardsText.setWildcard(hazardsTextBuffer);
    hazardsText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_EB6C));
    add(hazardsText);

    regenENText.setPosition(61, 572, 248, 26);
    regenENText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    regenENText.setLinespacing(0);
    Unicode::snprintf(regenENTextBuffer, REGENENTEXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_8CZ0).getText());
    regenENText.setWildcard(regenENTextBuffer);
    regenENText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5BT5));
    add(regenENText);

    lowPowerText.setPosition(240, 572, 248, 26);
    lowPowerText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    lowPowerText.setLinespacing(0);
    Unicode::snprintf(lowPowerTextBuffer, LOWPOWERTEXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4P1H).getText());
    lowPowerText.setWildcard(lowPowerTextBuffer);
    lowPowerText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7YYZ));
    add(lowPowerText);

    CruiseENText.setPosition(166, 612, 143, 26);
    CruiseENText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    CruiseENText.setLinespacing(0);
    Unicode::snprintf(CruiseENTextBuffer, CRUISEENTEXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5R2B).getText());
    CruiseENText.setWildcard(CruiseENTextBuffer);
    CruiseENText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JUHU));
    add(CruiseENText);

    CruiseDECText.setPosition(3, 612, 157, 26);
    CruiseDECText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    CruiseDECText.setLinespacing(0);
    Unicode::snprintf(CruiseDECTextBuffer, CRUISEDECTEXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CKIY).getText());
    CruiseDECText.setWildcard(CruiseDECTextBuffer);
    CruiseDECText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_QABV));
    add(CruiseDECText);

    CruiseINCText.setPosition(323, 612, 248, 26);
    CruiseINCText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    CruiseINCText.setLinespacing(0);
    Unicode::snprintf(CruiseINCTextBuffer, CRUISEINCTEXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1TFM).getText());
    CruiseINCText.setWildcard(CruiseINCTextBuffer);
    CruiseINCText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_AQNJ));
    add(CruiseINCText);

    rightTurnText.setPosition(323, 532, 248, 26);
    rightTurnText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    rightTurnText.setLinespacing(0);
    Unicode::snprintf(rightTurnTextBuffer, RIGHTTURNTEXT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_XKWJ).getText());
    rightTurnText.setWildcard(rightTurnTextBuffer);
    rightTurnText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5UY8));
    add(rightTurnText);

    BPS_SOC.setPosition(3, 422, 248, 26);
    BPS_SOC.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    BPS_SOC.setLinespacing(0);
    Unicode::snprintf(BPS_SOCBuffer, BPS_SOC_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_GJB3).getText());
    BPS_SOC.setWildcard(BPS_SOCBuffer);
    BPS_SOC.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HUPJ));
    add(BPS_SOC);

    DTCStatus.setPosition(252, 422, 248, 26);
    DTCStatus.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    DTCStatus.setLinespacing(0);
    Unicode::snprintf(DTCStatusBuffer, DTCSTATUS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9AJP).getText());
    DTCStatus.setWildcard(DTCStatusBuffer);
    DTCStatus.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0122));
    add(DTCStatus);

    ChargeRelay.setPosition(252, 462, 248, 26);
    ChargeRelay.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    ChargeRelay.setLinespacing(0);
    Unicode::snprintf(ChargeRelayBuffer, CHARGERELAY_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_4Y00).getText());
    ChargeRelay.setWildcard(ChargeRelayBuffer);
    ChargeRelay.setTypedText(touchgfx::TypedText(T___SINGLEUSE_P4JT));
    add(ChargeRelay);

    DischargeRelayStatus.setPosition(3, 462, 248, 26);
    DischargeRelayStatus.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    DischargeRelayStatus.setLinespacing(0);
    Unicode::snprintf(DischargeRelayStatusBuffer, DISCHARGERELAYSTATUS_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_HVTL).getText());
    DischargeRelayStatus.setWildcard(DischargeRelayStatusBuffer);
    DischargeRelayStatus.setTypedText(touchgfx::TypedText(T___SINGLEUSE_XM9Z));
    add(DischargeRelayStatus);

    powerAux.setPosition(3, 672, 310, 26);
    powerAux.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    powerAux.setLinespacing(0);
    Unicode::snprintf(powerAuxBuffer, POWERAUX_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_07ZR).getText());
    powerAux.setWildcard(powerAuxBuffer);
    powerAux.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WWYE));
    add(powerAux);

    bpsError.setPosition(313, 672, 248, 26);
    bpsError.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    bpsError.setLinespacing(0);
    Unicode::snprintf(bpsErrorBuffer, BPSERROR_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_1NXV).getText());
    bpsError.setWildcard(bpsErrorBuffer);
    bpsError.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LX7P));
    add(bpsError);

    solarPhoto.setPosition(252, 242, 215, 24);
    solarPhoto.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    solarPhoto.setLinespacing(0);
    Unicode::snprintf(solarPhotoBuffer, SOLARPHOTO_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_J8IU).getText());
    solarPhoto.setWildcard(solarPhotoBuffer);
    solarPhoto.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YIF1));
    add(solarPhoto);

    cruiseSpeed.setPosition(3, 282, 250, 30);
    cruiseSpeed.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    cruiseSpeed.setLinespacing(0);
    Unicode::snprintf(cruiseSpeedBuffer, CRUISESPEED_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_19XW).getText());
    cruiseSpeed.setWildcard(cruiseSpeedBuffer);
    cruiseSpeed.setTypedText(touchgfx::TypedText(T___SINGLEUSE_O4X1));
    add(cruiseSpeed);

    regenBreaking.setPosition(252, 282, 259, 30);
    regenBreaking.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    regenBreaking.setLinespacing(0);
    Unicode::snprintf(regenBreakingBuffer, REGENBREAKING_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JON3).getText());
    regenBreaking.setWildcard(regenBreakingBuffer);
    regenBreaking.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y8XR));
    add(regenBreaking);

    throttlePedal.setPosition(3, 322, 248, 25);
    throttlePedal.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    throttlePedal.setLinespacing(0);
    Unicode::snprintf(throttlePedalBuffer, THROTTLEPEDAL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_KGCS).getText());
    throttlePedal.setWildcard(throttlePedalBuffer);
    throttlePedal.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SJTS));
    add(throttlePedal);

    solarVolt.setPosition(3, 242, 250, 25);
    solarVolt.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    solarVolt.setLinespacing(0);
    Unicode::snprintf(solarVoltBuffer, SOLARVOLT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_3LDK).getText());
    solarVolt.setWildcard(solarVoltBuffer);
    solarVolt.setTypedText(touchgfx::TypedText(T___SINGLEUSE_C2TF));
    add(solarVolt);

    solarTemp.setPosition(252, 202, 276, 26);
    solarTemp.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    solarTemp.setLinespacing(0);
    Unicode::snprintf(solarTempBuffer, SOLARTEMP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_W31T).getText());
    solarTemp.setWildcard(solarTempBuffer);
    solarTemp.setTypedText(touchgfx::TypedText(T___SINGLEUSE_F2LO));
    add(solarTemp);

    solarCurr.setPosition(3, 202, 248, 26);
    solarCurr.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    solarCurr.setLinespacing(0);
    Unicode::snprintf(solarCurrBuffer, SOLARCURR_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CYEC).getText());
    solarCurr.setWildcard(solarCurrBuffer);
    solarCurr.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RKCB));
    add(solarCurr);

    line1.setPosition(41, 19, 140, 50);
    line1Painter.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    line1.setPainter(line1Painter);
    line1.setStart(0, 20);
    line1.setEnd(50, 20);
    line1.setLineWidth(10);
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(line1);

    line1_1.setPosition(377, 19, 74, 40);
    line1_1Painter.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    line1_1.setPainter(line1_1Painter);
    line1_1.setStart(60, 20);
    line1_1.setEnd(10, 20);
    line1_1.setLineWidth(10);
    line1_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(line1_1);

    shape1_2.setPosition(414, 13, 66, 56);
    shape1_2.setOrigin(0.0f, 0.0f);
    shape1_2.setScale(0.7f, 0.7f);
    shape1_2.setAngle(0.0f);
    shape1_2Painter.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    shape1_2.setPainter(shape1_2Painter);
    const touchgfx::AbstractShape::ShapePoint<float> shape1_2Points[3] = { { 35.0f, 0.0f }, { 35.0f, 75.0f }, { 75.0f, 35.0f } };
    shape1_2.setShape(shape1_2Points);
    add(shape1_2);

    shape1_2_1.setPosition(13, 13, 68, 82);
    shape1_2_1.setOrigin(0.0f, 0.0f);
    shape1_2_1.setScale(0.7f, 0.7f);
    shape1_2_1.setAngle(0.0f);
    shape1_2_1Painter.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    shape1_2_1.setPainter(shape1_2_1Painter);
    const touchgfx::AbstractShape::ShapePoint<float> shape1_2_1Points[3] = { { 40.0f, 0.0f }, { 40.0f, 75.0f }, { 0.0f, 35.0f } };
    shape1_2_1.setShape(shape1_2_1Points);
    add(shape1_2_1);

    MotorCommandsTitle.setXY(96, 117);
    MotorCommandsTitle.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    MotorCommandsTitle.setLinespacing(0);
    MotorCommandsTitle.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5Q9P));
    add(MotorCommandsTitle);

    BPSTitle.setXY(206, 347);
    BPSTitle.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    BPSTitle.setLinespacing(0);
    BPSTitle.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CKSE));
    add(BPSTitle);

    DashboardCommands.setXY(56, 494);
    DashboardCommands.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    DashboardCommands.setLinespacing(0);
    DashboardCommands.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NJEQ));
    add(DashboardCommands);

    Error.setXY(192, 638);
    Error.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    Error.setLinespacing(0);
    Error.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2MI9));
    add(Error);

    BPS_Warning.setXY(97, 24);
    BPS_Warning.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    BPS_Warning.setLinespacing(0);
    BPS_Warning.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OQG6));
    add(BPS_Warning);

    PowerAux_Warning.setXY(157, 24);
    PowerAux_Warning.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    PowerAux_Warning.setLinespacing(0);
    PowerAux_Warning.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BMOB));
    add(PowerAux_Warning);

    MtrComm_Warning.setXY(287, 24);
    MtrComm_Warning.setColor(touchgfx::Color::getColorFromRGB(255, 0, 0));
    MtrComm_Warning.setLinespacing(0);
    MtrComm_Warning.setTypedText(touchgfx::TypedText(T___SINGLEUSE_I4O9));
    add(MtrComm_Warning);

    RegenEN.setXY(50, 54);
    RegenEN.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    RegenEN.setLinespacing(0);
    RegenEN.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HRRE));
    add(RegenEN);

    CruiseDEC.setXY(392, 83);
    CruiseDEC.setColor(touchgfx::Color::getColorFromRGB(0, 255, 51));
    CruiseDEC.setLinespacing(0);
    CruiseDEC.setTypedText(touchgfx::TypedText(T___SINGLEUSE_NNKX));
    add(CruiseDEC);

    CruiseINC.setXY(340, 83);
    CruiseINC.setColor(touchgfx::Color::getColorFromRGB(0, 255, 51));
    CruiseINC.setLinespacing(0);
    CruiseINC.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2G26));
    add(CruiseINC);

    CruiseText.setXY(355, 54);
    CruiseText.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    CruiseText.setLinespacing(0);
    CruiseText.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZJV5));
    add(CruiseText);

    LowPowerEN.setXY(179, 54);
    LowPowerEN.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    LowPowerEN.setLinespacing(0);
    LowPowerEN.setTypedText(touchgfx::TypedText(T___SINGLEUSE_B7XZ));
    add(LowPowerEN);
}

Screen1ViewBase::~Screen1ViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Screen1ViewBase::setupScreen()
{

}

void Screen1ViewBase::handleTickEvent()
{
    //Interaction2
    //When every N tick call virtual function
    //Call function1
    function1();

    frameCountInteraction4Interval++;
    if(frameCountInteraction4Interval == TICK_INTERACTION4_INTERVAL)
    {
        //Interaction4
        //When every N tick call virtual function
        //Call function2
        function2();
        frameCountInteraction4Interval = 0;
    }
}

void Screen1ViewBase::handleKeyEvent(uint8_t key)
{
    if(25 == key)
    {
        //Interaction3
        //When hardware button 25 clicked change color of shape1_2
        //Set RGB color R:61, G:217, B:26 on shape1_2
        shape1_2Painter.setColor(touchgfx::Color::getColorFromRGB(61, 217, 26));
        shape1_2.invalidate();
    
    }
}
