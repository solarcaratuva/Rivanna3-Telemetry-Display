/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen1ViewBase::Screen1ViewBase()
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 480, 800);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    box1.setPosition(-1, 0, 480, 800);
    box1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    add(box1);

    boxWithBorder2.setPosition(-12, 110, 498, 251);
    boxWithBorder2.setColor(touchgfx::Color::getColorFromRGB(200, 203, 210));
    boxWithBorder2.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxWithBorder2.setBorderSize(5);
    add(boxWithBorder2);

    boxWithBorder2_1.setPosition(-9, 354, 495, 83);
    boxWithBorder2_1.setColor(touchgfx::Color::getColorFromRGB(249, 220, 191));
    boxWithBorder2_1.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxWithBorder2_1.setBorderSize(5);
    add(boxWithBorder2_1);

    boxWithBorder2_1_1.setPosition(-10, 426, 496, 86);
    boxWithBorder2_1_1.setColor(touchgfx::Color::getColorFromRGB(247, 190, 190));
    boxWithBorder2_1_1.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxWithBorder2_1_1.setBorderSize(5);
    add(boxWithBorder2_1_1);

    total.setPosition(4, 153, 129, 28);
    total.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    total.setLinespacing(0);
    Unicode::snprintf(totalBuffer, TOTAL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5XM3).getText());
    total.setWildcard(totalBuffer);
    total.setTypedText(touchgfx::TypedText(T___SINGLEUSE_60TL));
    add(total);

    session.setPosition(253, 155, 180, 26);
    session.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    session.setLinespacing(0);
    Unicode::snprintf(sessionBuffer, SESSION_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_SBY5).getText());
    session.setWildcard(sessionBuffer);
    session.setTypedText(touchgfx::TypedText(T___SINGLEUSE_GBLF));
    add(session);

    speed.setPosition(253, 319, 207, 25);
    speed.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    speed.setLinespacing(0);
    Unicode::snprintf(speedBuffer, SPEED_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_7C5Q).getText());
    speed.setWildcard(speedBuffer);
    speed.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TWF3));
    add(speed);

    bpsError.setPosition(5, 473, 151, 26);
    bpsError.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    bpsError.setLinespacing(0);
    Unicode::snprintf(bpsErrorBuffer, BPSERROR_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_19ON).getText());
    bpsError.setWildcard(bpsErrorBuffer);
    bpsError.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K8F2));
    add(bpsError);

    powerAux.setPosition(253, 473, 215, 29);
    powerAux.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    powerAux.setLinespacing(0);
    Unicode::snprintf(powerAuxBuffer, POWERAUX_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_N3FC).getText());
    powerAux.setWildcard(powerAuxBuffer);
    powerAux.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2J9V));
    add(powerAux);

    cellTemp.setPosition(253, 401, 217, 25);
    cellTemp.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    cellTemp.setLinespacing(0);
    Unicode::snprintf(cellTempBuffer, CELLTEMP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_QWO4).getText());
    cellTemp.setWildcard(cellTempBuffer);
    cellTemp.setTypedText(touchgfx::TypedText(T___SINGLEUSE_U3RT));
    add(cellTemp);

    cellVolt.setPosition(5, 400, 217, 26);
    cellVolt.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    cellVolt.setLinespacing(0);
    Unicode::snprintf(cellVoltBuffer, CELLVOLT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0XTX).getText());
    cellVolt.setWildcard(cellVoltBuffer);
    cellVolt.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7ZJ));
    add(cellVolt);

    solarPhoto.setPosition(253, 236, 132, 24);
    solarPhoto.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    solarPhoto.setLinespacing(0);
    Unicode::snprintf(solarPhotoBuffer, SOLARPHOTO_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_J8IU).getText());
    solarPhoto.setWildcard(solarPhotoBuffer);
    solarPhoto.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YIF1));
    add(solarPhoto);

    cruiseSpeed.setPosition(3, 277, 191, 27);
    cruiseSpeed.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    cruiseSpeed.setLinespacing(0);
    Unicode::snprintf(cruiseSpeedBuffer, CRUISESPEED_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_19XW).getText());
    cruiseSpeed.setWildcard(cruiseSpeedBuffer);
    cruiseSpeed.setTypedText(touchgfx::TypedText(T___SINGLEUSE_O4X1));
    add(cruiseSpeed);

    regenBreaking.setPosition(253, 277, 213, 30);
    regenBreaking.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    regenBreaking.setLinespacing(0);
    Unicode::snprintf(regenBreakingBuffer, REGENBREAKING_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JON3).getText());
    regenBreaking.setWildcard(regenBreakingBuffer);
    regenBreaking.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y8XR));
    add(regenBreaking);

    throttlePedal.setPosition(5, 319, 196, 25);
    throttlePedal.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    throttlePedal.setLinespacing(0);
    Unicode::snprintf(throttlePedalBuffer, THROTTLEPEDAL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_KGCS).getText());
    throttlePedal.setWildcard(throttlePedalBuffer);
    throttlePedal.setTypedText(touchgfx::TypedText(T___SINGLEUSE_SJTS));
    add(throttlePedal);

    solarVolt.setPosition(3, 235, 174, 27);
    solarVolt.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    solarVolt.setLinespacing(0);
    Unicode::snprintf(solarVoltBuffer, SOLARVOLT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_3LDK).getText());
    solarVolt.setWildcard(solarVoltBuffer);
    solarVolt.setTypedText(touchgfx::TypedText(T___SINGLEUSE_C2TF));
    add(solarVolt);

    solarTemp.setPosition(253, 192, 226, 26);
    solarTemp.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    solarTemp.setLinespacing(0);
    Unicode::snprintf(solarTempBuffer, SOLARTEMP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_W31T).getText());
    solarTemp.setWildcard(solarTempBuffer);
    solarTemp.setTypedText(touchgfx::TypedText(T___SINGLEUSE_F2LO));
    add(solarTemp);

    solarCurr.setPosition(3, 192, 234, 30);
    solarCurr.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    solarCurr.setLinespacing(0);
    Unicode::snprintf(solarCurrBuffer, SOLARCURR_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CYEC).getText());
    solarCurr.setWildcard(solarCurrBuffer);
    solarCurr.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RKCB));
    add(solarCurr);

    line1.setPosition(46, 32, 140, 50);
    line1Painter.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    line1.setPainter(line1Painter);
    line1.setStart(0, 20);
    line1.setEnd(100, 20);
    line1.setLineWidth(20);
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(line1);

    line1_1.setPosition(324, 32, 122, 50);
    line1_1Painter.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    line1_1.setPainter(line1_1Painter);
    line1_1.setStart(120, 20);
    line1_1.setEnd(10, 20);
    line1_1.setLineWidth(20);
    line1_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(line1_1);

    shape1_2.setPosition(392, 16, 88, 77);
    shape1_2.setOrigin(0.0f, 0.0f);
    shape1_2.setScale(1.0f, 1.0f);
    shape1_2.setAngle(0.0f);
    shape1_2Painter.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    shape1_2.setPainter(shape1_2Painter);
    const touchgfx::AbstractShape::ShapePoint<float> shape1_2Points[3] = { { 35.0f, 0.0f }, { 35.0f, 75.0f }, { 75.0f, 35.0f } };
    shape1_2.setShape(shape1_2Points);
    add(shape1_2);

    shape1_2_1.setPosition(12, 16, 68, 112);
    shape1_2_1.setOrigin(0.0f, 0.0f);
    shape1_2_1.setScale(1.0f, 1.0f);
    shape1_2_1.setAngle(0.0f);
    shape1_2_1Painter.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    shape1_2_1.setPainter(shape1_2_1Painter);
    const touchgfx::AbstractShape::ShapePoint<float> shape1_2_1Points[3] = { { 40.0f, 0.0f }, { 40.0f, 75.0f }, { 0.0f, 35.0f } };
    shape1_2_1.setShape(shape1_2_1Points);
    add(shape1_2_1);

    MotorCommandsTitle.setXY(102, 110);
    MotorCommandsTitle.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    MotorCommandsTitle.setLinespacing(0);
    MotorCommandsTitle.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5Q9P));
    add(MotorCommandsTitle);

    textArea1.setXY(207, 361);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_CKSE));
    add(textArea1);

    textArea1_1.setXY(197, 436);
    textArea1_1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea1_1.setLinespacing(0);
    textArea1_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DOD1));
    add(textArea1_1);
}

Screen1ViewBase::~Screen1ViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Screen1ViewBase::setupScreen()
{

}

void Screen1ViewBase::handleTickEvent()
{
    //Interaction2
    //When every N tick call virtual function
    //Call function1
    function1();
}

void Screen1ViewBase::handleKeyEvent(uint8_t key)
{
    if(25 == key)
    {
        //Interaction3
        //When hardware button 25 clicked change color of shape1_2
        //Set RGB color R:61, G:217, B:26 on shape1_2
        shape1_2Painter.setColor(touchgfx::Color::getColorFromRGB(61, 217, 26));
        shape1_2.invalidate();
    
    }
}
