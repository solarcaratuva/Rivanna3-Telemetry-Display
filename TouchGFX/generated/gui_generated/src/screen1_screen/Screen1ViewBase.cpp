/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen1ViewBase::Screen1ViewBase()
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 480, 800);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    box1.setPosition(-1, 0, 480, 800);
    box1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    add(box1);

    boxWithBorder1.setPosition(0, 73, 480, 177);
    boxWithBorder1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    boxWithBorder1.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxWithBorder1.setBorderSize(5);
    add(boxWithBorder1);

    boxWithBorder1_1.setPosition(0, 240, 480, 218);
    boxWithBorder1_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    boxWithBorder1_1.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxWithBorder1_1.setBorderSize(5);
    add(boxWithBorder1_1);

    boxWithBorder1_1_1.setPosition(0, 449, 480, 218);
    boxWithBorder1_1_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    boxWithBorder1_1_1.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxWithBorder1_1_1.setBorderSize(5);
    add(boxWithBorder1_1_1);

    boxWithBorder1_1_1_1.setPosition(1, 659, 480, 141);
    boxWithBorder1_1_1_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    boxWithBorder1_1_1_1.setBorderColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxWithBorder1_1_1_1.setBorderSize(5);
    add(boxWithBorder1_1_1_1);

    total.setPosition(29, 144, 452, 47);
    total.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    total.setLinespacing(0);
    Unicode::snprintf(totalBuffer, TOTAL_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_5XM3).getText());
    total.setWildcard(totalBuffer);
    total.setTypedText(touchgfx::TypedText(T___SINGLEUSE_60TL));
    add(total);

    session.setPosition(28, 191, 452, 49);
    session.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    session.setLinespacing(0);
    Unicode::snprintf(sessionBuffer, SESSION_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_SBY5).getText());
    session.setWildcard(sessionBuffer);
    session.setTypedText(touchgfx::TypedText(T___SINGLEUSE_GBLF));
    add(session);

    speed.setPosition(28, 98, 451, 46);
    speed.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    speed.setLinespacing(0);
    Unicode::snprintf(speedBuffer, SPEED_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_7C5Q).getText());
    speed.setWildcard(speedBuffer);
    speed.setTypedText(touchgfx::TypedText(T___SINGLEUSE_TWF3));
    add(speed);

    bpsError.setPosition(28, 580, 452, 45);
    bpsError.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    bpsError.setLinespacing(0);
    Unicode::snprintf(bpsErrorBuffer, BPSERROR_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_19ON).getText());
    bpsError.setWildcard(bpsErrorBuffer);
    bpsError.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K8F2));
    add(bpsError);

    motor.setPosition(28, 729, 452, 44);
    motor.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    motor.setLinespacing(0);
    Unicode::snprintf(motorBuffer, MOTOR_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_SJL0).getText());
    motor.setWildcard(motorBuffer);
    motor.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RHTA));
    add(motor);

    powerAux.setPosition(28, 685, 452, 44);
    powerAux.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    powerAux.setLinespacing(0);
    Unicode::snprintf(powerAuxBuffer, POWERAUX_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_N3FC).getText());
    powerAux.setWildcard(powerAuxBuffer);
    powerAux.setTypedText(touchgfx::TypedText(T___SINGLEUSE_2J9V));
    add(powerAux);

    cellTemp.setPosition(29, 536, 451, 44);
    cellTemp.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    cellTemp.setLinespacing(0);
    Unicode::snprintf(cellTempBuffer, CELLTEMP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_QWO4).getText());
    cellTemp.setWildcard(cellTempBuffer);
    cellTemp.setTypedText(touchgfx::TypedText(T___SINGLEUSE_U3RT));
    add(cellTemp);

    cellVolt.setPosition(29, 491, 451, 45);
    cellVolt.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    cellVolt.setLinespacing(0);
    Unicode::snprintf(cellVoltBuffer, CELLVOLT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_0XTX).getText());
    cellVolt.setWildcard(cellVoltBuffer);
    cellVolt.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K7ZJ));
    add(cellVolt);

    solarPhoto.setPosition(29, 391, 451, 44);
    solarPhoto.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    solarPhoto.setLinespacing(0);
    Unicode::snprintf(solarPhotoBuffer, SOLARPHOTO_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_J8IU).getText());
    solarPhoto.setWildcard(solarPhotoBuffer);
    solarPhoto.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YIF1));
    add(solarPhoto);

    solarVolt.setPosition(28, 340, 452, 51);
    solarVolt.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    solarVolt.setLinespacing(0);
    Unicode::snprintf(solarVoltBuffer, SOLARVOLT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_3LDK).getText());
    solarVolt.setWildcard(solarVoltBuffer);
    solarVolt.setTypedText(touchgfx::TypedText(T___SINGLEUSE_C2TF));
    add(solarVolt);

    solarTemp.setPosition(28, 294, 453, 46);
    solarTemp.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    solarTemp.setLinespacing(0);
    Unicode::snprintf(solarTempBuffer, SOLARTEMP_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_W31T).getText());
    solarTemp.setWildcard(solarTempBuffer);
    solarTemp.setTypedText(touchgfx::TypedText(T___SINGLEUSE_F2LO));
    add(solarTemp);

    solarCurr.setPosition(28, 250, 452, 44);
    solarCurr.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    solarCurr.setLinespacing(0);
    Unicode::snprintf(solarCurrBuffer, SOLARCURR_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_CYEC).getText());
    solarCurr.setWildcard(solarCurrBuffer);
    solarCurr.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RKCB));
    add(solarCurr);

    line1.setPosition(35, 16, 140, 50);
    line1Painter.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    line1.setPainter(line1Painter);
    line1.setStart(0, 20);
    line1.setEnd(100, 20);
    line1.setLineWidth(20);
    line1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(line1);

    line1_1.setPosition(331, 16, 122, 50);
    line1_1Painter.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    line1_1.setPainter(line1_1Painter);
    line1_1.setStart(120, 20);
    line1_1.setEnd(10, 20);
    line1_1.setLineWidth(20);
    line1_1.setLineEndingStyle(touchgfx::Line::ROUND_CAP_ENDING);
    add(line1_1);

    shape1_2.setPosition(399, 0, 88, 77);
    shape1_2.setOrigin(0.0f, 0.0f);
    shape1_2.setScale(1.0f, 1.0f);
    shape1_2.setAngle(0.0f);
    shape1_2Painter.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    shape1_2.setPainter(shape1_2Painter);
    const touchgfx::AbstractShape::ShapePoint<float> shape1_2Points[3] = { { 35.0f, 0.0f }, { 35.0f, 75.0f }, { 75.0f, 35.0f } };
    shape1_2.setShape(shape1_2Points);
    add(shape1_2);

    shape1_2_1.setPosition(1, 0, 68, 112);
    shape1_2_1.setOrigin(0.0f, 0.0f);
    shape1_2_1.setScale(1.0f, 1.0f);
    shape1_2_1.setAngle(0.0f);
    shape1_2_1Painter.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    shape1_2_1.setPainter(shape1_2_1Painter);
    const touchgfx::AbstractShape::ShapePoint<float> shape1_2_1Points[3] = { { 40.0f, 0.0f }, { 40.0f, 75.0f }, { -0.0f, 35.0f } };
    shape1_2_1.setShape(shape1_2_1Points);
    add(shape1_2_1);
}

Screen1ViewBase::~Screen1ViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void Screen1ViewBase::setupScreen()
{

}

void Screen1ViewBase::handleTickEvent()
{
    //Interaction2
    //When every N tick call virtual function
    //Call function1
    function1();
}
