/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef SCREEN1VIEWBASE_HPP
#define SCREEN1VIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/canvas/Line.hpp>
#include <touchgfx/widgets/canvas/PainterRGB888.hpp>
#include <touchgfx/widgets/canvas/Shape.hpp>

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase();
    virtual void setupScreen();
    virtual void handleTickEvent();

    /*
     * Virtual Action Handlers
     */
    virtual void function1()
    {
        // Override and implement this function in Screen1
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Box box1;
    touchgfx::BoxWithBorder boxWithBorder1;
    touchgfx::BoxWithBorder boxWithBorder1_1;
    touchgfx::BoxWithBorder boxWithBorder1_1_1;
    touchgfx::BoxWithBorder boxWithBorder1_1_1_1;
    touchgfx::TextAreaWithOneWildcard total;
    touchgfx::TextAreaWithOneWildcard session;
    touchgfx::TextAreaWithOneWildcard speed;
    touchgfx::TextAreaWithOneWildcard bpsError;
    touchgfx::TextAreaWithOneWildcard motor;
    touchgfx::TextAreaWithOneWildcard powerAux;
    touchgfx::TextAreaWithOneWildcard cellTemp;
    touchgfx::TextAreaWithOneWildcard cellVolt;
    touchgfx::TextAreaWithOneWildcard solarPhoto;
    touchgfx::TextAreaWithOneWildcard solarVolt;
    touchgfx::TextAreaWithOneWildcard solarTemp;
    touchgfx::TextAreaWithOneWildcard solarCurr;
    touchgfx::Line line1;
    touchgfx::PainterRGB888 line1Painter;
    touchgfx::Line line1_1;
    touchgfx::PainterRGB888 line1_1Painter;
    touchgfx::Shape<3> shape1_2;
    touchgfx::PainterRGB888 shape1_2Painter;
    touchgfx::Shape<3> shape1_2_1;
    touchgfx::PainterRGB888 shape1_2_1Painter;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TOTAL_SIZE = 10;
    touchgfx::Unicode::UnicodeChar totalBuffer[TOTAL_SIZE];
    static const uint16_t SESSION_SIZE = 10;
    touchgfx::Unicode::UnicodeChar sessionBuffer[SESSION_SIZE];
    static const uint16_t SPEED_SIZE = 10;
    touchgfx::Unicode::UnicodeChar speedBuffer[SPEED_SIZE];
    static const uint16_t BPSERROR_SIZE = 10;
    touchgfx::Unicode::UnicodeChar bpsErrorBuffer[BPSERROR_SIZE];
    static const uint16_t MOTOR_SIZE = 10;
    touchgfx::Unicode::UnicodeChar motorBuffer[MOTOR_SIZE];
    static const uint16_t POWERAUX_SIZE = 10;
    touchgfx::Unicode::UnicodeChar powerAuxBuffer[POWERAUX_SIZE];
    static const uint16_t CELLTEMP_SIZE = 10;
    touchgfx::Unicode::UnicodeChar cellTempBuffer[CELLTEMP_SIZE];
    static const uint16_t CELLVOLT_SIZE = 10;
    touchgfx::Unicode::UnicodeChar cellVoltBuffer[CELLVOLT_SIZE];
    static const uint16_t SOLARPHOTO_SIZE = 10;
    touchgfx::Unicode::UnicodeChar solarPhotoBuffer[SOLARPHOTO_SIZE];
    static const uint16_t SOLARVOLT_SIZE = 10;
    touchgfx::Unicode::UnicodeChar solarVoltBuffer[SOLARVOLT_SIZE];
    static const uint16_t SOLARTEMP_SIZE = 10;
    touchgfx::Unicode::UnicodeChar solarTempBuffer[SOLARTEMP_SIZE];
    static const uint16_t SOLARCURR_SIZE = 10;
    touchgfx::Unicode::UnicodeChar solarCurrBuffer[SOLARCURR_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 7200;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

};

#endif // SCREEN1VIEWBASE_HPP
